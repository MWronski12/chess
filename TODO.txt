CORE:
- How to assure that alphaBeta is properly implemented? 
    - logic
    - move ordering
    - iterative deepening
    - Gotta test some how if it prunes the branches correctly
- quiescenceSearch:
    - Until no check move is available
    - Until no capture move is available
    - then evaluate
- searchForMate:
    - gotta return from the getBestMove as soon as forced mate is found
- timeout functionality in getBestMove

HOW TO SPEEDUP:
- Transposition hashing tables
- getBestMove evaluates every move in a different thread
- get Board::fastCopy to work

REST:
- Insufficient material in evaluation function
- Keep track of game phase (mid or end game)
- evaluateMoves:
    - Operate on Move struct instead of whole MoveContent
    - Reward castling and first move of the piece
    - It also includes pseudo legal moves, which is a problem when trying to see if its staleMate
